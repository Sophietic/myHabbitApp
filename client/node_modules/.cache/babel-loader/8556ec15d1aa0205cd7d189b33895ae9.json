{"ast":null,"code":"import moment from 'moment';\nexport const currentRunStreakCalc = (userFromDB, setRunStreak) => {\n  let oneRunStreak = 0;\n  const currentTime = moment().unix();\n\n  for (let i = 0; i < userFromDB.data.myHabits.length; i++) {\n    if (userFromDB.data[i + 1] !== undefined) {\n      // oneRunStreak = 1;\n      const prevUpdated = Date.parse(userFromDB.data[i].myHabits.updatedAt);\n      const currentUpdated = Date.parse(userFromDB.data[i + 1].myHabits.updatedAt);\n\n      if (prevUpdated !== Date.parse(userFromDB.data[i].myHabits.createdAt)) {\n        if (currentTime - prevUpdated < 86400) {\n          //defines current run streak: within the day\n          if (currentUpdated - prevUpdated < 86400 && userFromDB.myHabits.data[i].completed === true) {\n            //for every session completed in a 24hr window, add 1 to the runStreak. \n            oneRunStreak++;\n          } else {\n            //else break the run streak, push it to array, and start again at 1.\n            // longestRunStreakArray.push(oneRunStreak);\n            oneRunStreak = 0;\n          }\n        }\n      }\n    } else {\n      if (userFromDB.data[i].myHabits.completed === true) {\n        oneRunStreak++;\n      } // longestRunStreakArray.push(oneRunStreak);\n\n\n      oneRunStreak = 0;\n      console.log(oneRunStreak);\n    }\n  } // const highestRunStreak = Math.max.apply(null, longestRunStreakArray);\n  // setRunStreak(highestRunStreak);\n\n};","map":{"version":3,"sources":["/home/sophiepa/ironhack/finalproject/myIronhackProject/client/src/components/streaks/Streaks.js"],"names":["moment","currentRunStreakCalc","userFromDB","setRunStreak","oneRunStreak","currentTime","unix","i","data","myHabits","length","undefined","prevUpdated","Date","parse","updatedAt","currentUpdated","createdAt","completed","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AAC9D,MAAIC,YAAY,GAAG,CAAnB;AACA,QAAMC,WAAW,GAAGL,MAAM,GAAGM,IAAT,EAApB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,UAAU,CAACM,IAAX,CAAgBC,QAAhB,CAAyBC,MAA5C,EAAoDH,CAAC,EAArD,EAAyD;AACvD,QAAIL,UAAU,CAACM,IAAX,CAAgBD,CAAC,GAAC,CAAlB,MAAyBI,SAA7B,EAAwC;AACtC;AACA,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWZ,UAAU,CAACM,IAAX,CAAgBD,CAAhB,EAAmBE,QAAnB,CAA4BM,SAAvC,CAApB;AACA,YAAMC,cAAc,GAAGH,IAAI,CAACC,KAAL,CAAWZ,UAAU,CAACM,IAAX,CAAgBD,CAAC,GAAC,CAAlB,EAAqBE,QAArB,CAA8BM,SAAzC,CAAvB;;AAEA,UAAIH,WAAW,KAAKC,IAAI,CAACC,KAAL,CAAWZ,UAAU,CAACM,IAAX,CAAgBD,CAAhB,EAAmBE,QAAnB,CAA4BQ,SAAvC,CAApB,EAAuE;AACrE,YAAGZ,WAAW,GAAGO,WAAd,GAA4B,KAA/B,EAAsC;AAAE;AACpC,cAAGI,cAAc,GAAGJ,WAAjB,GAA+B,KAA/B,IAAwCV,UAAU,CAACO,QAAX,CAAoBD,IAApB,CAAyBD,CAAzB,EAA4BW,SAA5B,KAA0C,IAArF,EAA2F;AACzF;AACAd,YAAAA,YAAY;AACb,WAHD,MAGO;AACL;AACA;AACAA,YAAAA,YAAY,GAAG,CAAf;AACD;AACJ;AACF;AAEF,KAlBD,MAkBO;AACL,UAAGF,UAAU,CAACM,IAAX,CAAgBD,CAAhB,EAAmBE,QAAnB,CAA4BS,SAA5B,KAA0C,IAA7C,EAAoD;AAClDd,QAAAA,YAAY;AACb,OAHI,CAIL;;;AACAA,MAAAA,YAAY,GAAG,CAAf;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,YAAZ;AACD;AAEF,GAhC6D,CAkC9D;AACA;;AACD,CApCI","sourcesContent":["import moment from 'moment';\n\nexport const currentRunStreakCalc = (userFromDB, setRunStreak) => {\n    let oneRunStreak = 0;\n    const currentTime = moment().unix()\n  \n    for(let i = 0; i < userFromDB.data.myHabits.length; i++) {\n      if (userFromDB.data[i+1] !== undefined) { \n        // oneRunStreak = 1;\n        const prevUpdated = Date.parse(userFromDB.data[i].myHabits.updatedAt)\n        const currentUpdated = Date.parse(userFromDB.data[i+1].myHabits.updatedAt)\n  \n        if (prevUpdated !== Date.parse(userFromDB.data[i].myHabits.createdAt)) {\n          if(currentTime - prevUpdated < 86400) { //defines current run streak: within the day\n              if(currentUpdated - prevUpdated < 86400 && userFromDB.myHabits.data[i].completed === true) {\n                //for every session completed in a 24hr window, add 1 to the runStreak. \n                oneRunStreak++;\n              } else {\n                //else break the run streak, push it to array, and start again at 1.\n                // longestRunStreakArray.push(oneRunStreak);\n                oneRunStreak = 0;\n              }\n          }  \n        }\n  \n      } else {\n        if(userFromDB.data[i].myHabits.completed === true ) {\n          oneRunStreak++;\n        }\n        // longestRunStreakArray.push(oneRunStreak);\n        oneRunStreak = 0;\n        console.log(oneRunStreak)\n      }\n  \n    }\n  \n    // const highestRunStreak = Math.max.apply(null, longestRunStreakArray);\n    // setRunStreak(highestRunStreak);\n  }"]},"metadata":{},"sourceType":"module"}