{"ast":null,"code":"import _slicedToArray from\"/home/sophiepa/ironhack/finalproject/myIronhackProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"bulma/css/bulma.css\";import{Link}from\"react-router-dom\";import moment from'moment';function MyHabits(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myHabitsState=_useState2[0],setMyHabits=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),runStreak=_useState4[0],setRunStreak=_useState4[1];var longestRunStreakArray=[];var oneRunStreak=0;var currentTime=moment().unix();function getMyHabits(){axios.get(\"http://localhost:5000/api/my-habits\",{withCredentials:true}).then(function(userFromDB){setMyHabits(userFromDB.data.myHabits);//logic to work out current runstreak\n// function currentRunStreakCalc(){\n//         for(let i = 0; i < userFromDB.data.myHabits.length; i++) {\n//           if (userFromDB.data[i+1] !== undefined) { \n//             // oneRunStreak = 1;\n//             const prevUpdated = Date.parse(userFromDB.data[i].myHabits.updatedAt)\n//             const currentUpdated = Date.parse(userFromDB.data[i+1].myHabits.updatedAt)\n//             if (prevUpdated !== Date.parse(userFromDB.data[i].myHabits.createdAt)) {\n//               if(currentTime - prevUpdated < 86400) { //defines current run streak: within the day\n//                 if(currentUpdated - prevUpdated < 86400) {\n//                   //for every session completed in a 24hr window, add 1 to the runStreak. \n//                   oneRunStreak++;\n//                 }  else {\n//                     //else break the run streak, push it to array, and start again at 1.\n//                     longestRunStreakArray.push(oneRunStreak);\n//                     oneRunStreak = 0;\n//                   }\n//               }  \n//             }\n//         }}}\n//         //logic to work out current runstreak\n//         currentRunStreakCalc(userFromDB.data.myHabits, setRunStreak);\n}).catch(function(error){return console.log(error);});}useEffect(getMyHabits,[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"section\",{className:\"section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"columns is-centered\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column is-auto\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"title is-1 is-family-code\",children:\"My Habits\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"columns is-multiline\",children:myHabitsState.map(function(oneMyHabit){return/*#__PURE__*/_jsx(\"div\",{class:\"column is-one-third\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"subtitle is-4 has-text-weight-semibold\",children:[oneMyHabit.habitname,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"content\",children:[oneMyHabit.dailyStreak,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"content\",children:[oneMyHabit.description,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"content\",children:[oneMyHabit.categories,\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"footer\",{className:\"card-footer\",children:/*#__PURE__*/_jsx(Link,{className:\"card-footer-item\",to:\"/explore/\".concat(oneMyHabit._id),children:/*#__PURE__*/_jsx(\"h3\",{className:\"button is-danger is-rounded\",children:\"See more\"})})})]},oneMyHabit._id)})});})})]})})})})});}export default MyHabits;","map":{"version":3,"sources":["/home/sophiepa/ironhack/finalproject/myIronhackProject/client/src/components/myHabit/myHabit.js"],"names":["React","useState","useEffect","axios","Link","moment","MyHabits","props","myHabitsState","setMyHabits","runStreak","setRunStreak","longestRunStreakArray","oneRunStreak","currentTime","unix","getMyHabits","get","withCredentials","then","userFromDB","data","myHabits","catch","error","console","log","map","oneMyHabit","habitname","dailyStreak","description","categories","_id"],"mappings":"4QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,qBAAP,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAGA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,eACcN,QAAQ,CAAC,EAAD,CADtB,wCAChBO,aADgB,eACDC,WADC,8BAEWR,QAAQ,CAAC,CAAD,CAFnB,yCAEhBS,SAFgB,eAELC,YAFK,eAGvB,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CACA,GAAIC,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAMC,CAAAA,WAAW,CAAGT,MAAM,GAAGU,IAAT,EAApB,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrBb,KAAK,CACFc,GADH,CAEI,qCAFJ,CAGI,CAAEC,eAAe,CAAE,IAAnB,CAHJ,EAKGC,IALH,CAKQ,SAACC,UAAD,CAAgB,CACpBX,WAAW,CAACW,UAAU,CAACC,IAAX,CAAgBC,QAAjB,CAAX,CACA;AACR;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,CA9BH,EAgCGC,KAhCH,CAgCS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EAhCT,EAiCD,CAEDtB,SAAS,CAACc,WAAD,CAAc,EAAd,CAAT,CAGA,mBACE,kCACA,gBAAS,SAAS,CAAC,SAAnB,uBACJ,YAAK,SAAS,CAAC,WAAf,uBACE,YAAK,SAAS,CAAC,qBAAf,uBACE,aAAK,SAAS,CAAC,gBAAf,wBACA,kCACA,WAAI,SAAS,CAAC,2BAAd,uBADA,EADA,cAIE,aAJF,cAKE,YAAK,SAAS,CAAC,sBAAf,UACCR,aAAa,CAACmB,GAAd,CAAkB,SAACC,UAAD,CAAgB,CACjC,mBACU,YAAK,KAAK,CAAC,qBAAX,uBACE,YAAK,SAAS,CAAC,MAAf,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YAAI,SAAS,CAAC,wCAAd,WACGA,UAAU,CAACC,SADd,CACyB,GADzB,GADF,cAIE,WAAG,SAAS,CAAC,SAAb,WAAwBD,UAAU,CAACE,WAAnC,OAJF,cAME,WAAG,SAAS,CAAC,SAAb,WAAwBF,UAAU,CAACG,WAAnC,OANF,cAOE,WAAG,SAAS,CAAC,SAAb,WAAwBH,UAAU,CAACI,UAAnC,OAPF,cAQE,aARF,cASE,eAAQ,SAAS,CAAC,aAAlB,uBACE,KAAC,IAAD,EACE,SAAS,CAAC,kBADZ,CAEE,EAAE,oBAAcJ,UAAU,CAACK,GAAzB,CAFJ,uBAIE,WAAI,SAAS,CAAC,6BAAd,sBAJF,EADF,EATF,GAAmCL,UAAU,CAACK,GAA9C,CADF,EADF,EADV,CAwBD,CAzBA,CADD,EALF,GADF,EADF,EADI,EADA,EADF,CAkDD,CAKD,cAAe3B,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bulma/css/bulma.css\";\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\n\n\nfunction MyHabits(props) {\n  const [myHabitsState, setMyHabits] = useState([]);\n  const [runStreak, setRunStreak] = useState(0);\n  let longestRunStreakArray = [];\n  let oneRunStreak = 0;\n  const currentTime = moment().unix()\n\n  function getMyHabits() {\n    axios\n      .get(\n        \"http://localhost:5000/api/my-habits\",\n        { withCredentials: true }\n      )\n      .then((userFromDB) => {\n        setMyHabits(userFromDB.data.myHabits);    \n        //logic to work out current runstreak\n// function currentRunStreakCalc(){\n//         for(let i = 0; i < userFromDB.data.myHabits.length; i++) {\n//           if (userFromDB.data[i+1] !== undefined) { \n//             // oneRunStreak = 1;\n//             const prevUpdated = Date.parse(userFromDB.data[i].myHabits.updatedAt)\n//             const currentUpdated = Date.parse(userFromDB.data[i+1].myHabits.updatedAt)\n      \n//             if (prevUpdated !== Date.parse(userFromDB.data[i].myHabits.createdAt)) {\n//               if(currentTime - prevUpdated < 86400) { //defines current run streak: within the day\n//                 if(currentUpdated - prevUpdated < 86400) {\n//                   //for every session completed in a 24hr window, add 1 to the runStreak. \n//                   oneRunStreak++;\n//                 }  else {\n//                     //else break the run streak, push it to array, and start again at 1.\n//                     longestRunStreakArray.push(oneRunStreak);\n//                     oneRunStreak = 0;\n//                   }\n//               }  \n//             }\n//         }}}\n//         //logic to work out current runstreak\n//         currentRunStreakCalc(userFromDB.data.myHabits, setRunStreak);\n      })\n      \n      .catch((error) => console.log(error));\n  }\n\n  useEffect(getMyHabits, []);\n\n\n  return (\n    <div>\n    <section className=\"section\">\n<div className=\"container\">\n  <div className=\"columns is-centered\">\n    <div className=\"column is-auto\">\n    <div>\n    <h1 className=\"title is-1 is-family-code\">My Habits</h1>\n      </div> \n      <br></br>\n      <div className=\"columns is-multiline\">\n      {myHabitsState.map((oneMyHabit) => {\n        return (\n                  <div class=\"column is-one-third\">\n                    <div className=\"card\">\n                      <div className=\"card-content\" key={oneMyHabit._id}>\n                        <h3 className=\"subtitle is-4 has-text-weight-semibold\">\n                          {oneMyHabit.habitname}{\" \"}\n                        </h3>\n                        <p className=\"content\">{oneMyHabit.dailyStreak} </p>\n\n                        <p className=\"content\">{oneMyHabit.description} </p>\n                        <p className=\"content\">{oneMyHabit.categories} </p>\n                        <br></br>\n                        <footer className=\"card-footer\">\n                          <Link\n                            className=\"card-footer-item\"\n                            to={`/explore/${oneMyHabit._id}`}\n                          >\n                            <h3 className=\"button is-danger is-rounded\">See more</h3>\n                          </Link>\n                        </footer>\n                      </div>\n                    </div>\n                  </div>\n        );\n      })}</div>\n    </div>\n  </div>\n</div>\n</section>\n\n\n\n\n\n    \n \n    </div>\n  );\n}\n\n\n\n\nexport default MyHabits;\n"]},"metadata":{},"sourceType":"module"}