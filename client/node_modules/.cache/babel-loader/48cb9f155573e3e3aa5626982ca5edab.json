{"ast":null,"code":"import _classCallCheck from\"/home/sophiepa/ironhack/finalproject/myIronhackProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from\"axios\";// Contains all the methods and also we need to use the create method of axios to build a new instance\nvar AuthService=function AuthService(){var _this=this;_classCallCheck(this,AuthService);this.signup=function(email,password){return _this.service.post(\"/signup\",{email:email,password:password}).then(function(response){return response.data;});};this.login=function(email,password){return _this.service.post(\"/login\",{email:email,password:password}).then(function(response){return response.data;});};this.logout=function(){return _this.service.post(\"/logout\",{}).then(function(response){return response.data;});};this.isAuthenticated=function(){return _this.service.get(\"/loggedin\").then(function(response){return response.data;});};this.service=axios.create({baseURL:\"http://localhost:5000/api\",withCredentials:true// indicates whether or not cross-site Access-Control requests should be made using credentials\n});}// Brug signup\n;export default AuthService;","map":{"version":3,"sources":["/home/sophiepa/ironhack/finalproject/myIronhackProject/client/src/services/auth.service.js"],"names":["axios","AuthService","signup","email","password","service","post","then","response","data","login","logout","isAuthenticated","get","create","baseURL","withCredentials"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;GACMC,CAAAA,W,CACJ,sBAAc,uDAQdC,MARc,CAQL,SAACC,KAAD,CAAQC,QAAR,CAAqB,CAC5B,MAAO,CAAA,KAAI,CAACC,OAAL,CACJC,IADI,CACC,SADD,CACY,CAAEH,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CADZ,EAEJG,IAFI,CAEC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAvB,EAFD,CAAP,CAGD,CAZa,MAcdC,KAdc,CAcN,SAACP,KAAD,CAAQC,QAAR,CAAqB,CAC3B,MAAO,CAAA,KAAI,CAACC,OAAL,CACJC,IADI,CACC,QADD,CACW,CAAEH,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CADX,EAEJG,IAFI,CAEC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAvB,EAFD,CAAP,CAGD,CAlBa,MAqBZE,MArBY,CAqBH,UAAM,CACb,MAAO,CAAA,KAAI,CAACN,OAAL,CACJC,IADI,CACC,SADD,CACY,EADZ,EAEJC,IAFI,CAEC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAvB,EAFD,CAAP,CAGD,CAzBW,MA2BZG,eA3BY,CA2BM,UAAM,CACtB,MAAO,CAAA,KAAI,CAACP,OAAL,CAAaQ,GAAb,CAAiB,WAAjB,EAA8BN,IAA9B,CAAmC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAvB,EAAnC,CAAP,CACD,CA7BW,CACZ,KAAKJ,OAAL,CAAeL,KAAK,CAACc,MAAN,CAAa,CAC1BC,OAAO,CAAE,2BADiB,CAE1BC,eAAe,CAAE,IAAM;AAFG,CAAb,CAAf,CAID,CAED;CA0BF,cAAef,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\n\n// Contains all the methods and also we need to use the create method of axios to build a new instance\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:5000/api\",\n      withCredentials: true, // indicates whether or not cross-site Access-Control requests should be made using credentials\n    });\n  }\n\n  // Brug signup\n  signup = (email, password) => {\n    return this.service\n      .post(\"/signup\", { email, password })\n      .then((response) => response.data);\n  };\n  // Brug Login\n  login = (email, password) => {\n    return this.service\n      .post(\"/login\", { email, password })\n      .then((response) => response.data);\n  };\n\n    // Brug Loguit\n    logout = () => {\n      return this.service\n        .post(\"/logout\", {})\n        .then((response) => response.data);\n    };\n\n    isAuthenticated = () => {\n      return this.service.get(\"/loggedin\").then((response) => response.data);\n    };\n\n\n}\nexport default AuthService;\n"]},"metadata":{},"sourceType":"module"}